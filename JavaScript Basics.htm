<!DOCTYPE html>
<html lang="en">

<head>
    <title>JavaScript Basics</title>
    <link rel="stylesheet" type="text/css" href="JavaScript Basics.css">
</head>

<body>
    <div id="wrapper">
        <div id="header">
            <h1>JavaScript Basics</h1>
        </div>
        <div id="navigation">
            <u>Home</u>
            <ul>
                <li>
                    <a>JavaScript Overview</a>
                </li>
                <ul style="list-style-type:circle;">
                    <li>Variable Declaration</li>
                    <li>Variable Assignment</li>
                    <li>Data Tipe</li>
                    <li>Conditional</li>
                    <li>Loops</li>
                    <li>Function</li>
                </ul>

                <li>
                    <a>Project</a>
                </li>
                <li>
                    <a>Assignments</a>
                </li>
                <li>
                    <a>Quiz</a>
                </li>
            </ul>
        </div>
        <div id="main_content">
            <h2>JavaScript Basics</h2>
            <p>JavaScript is a cross-plataform, object-oriented scripting languaje. JavaScript is extremely popular for a variaty of reasons. It is a small and lightweight languaje allowing maximum flexibility for developers to take it in a bunch of different
                directions. JavaScript lives inside a host enviroment (a web browser or Node server), it can be connected to the objects of these environments to provide programmatic control over them.
                <ul>
                    <li>
                        <p><a href="Vriable Declaraation">Declaration JavaScript </a>variables are containers for storing data values - imagine a cup you fill with coffe, the cup holds the coffee, a variable holds a value. All JavaScript variables must be
                            identified with unique names. These unique names are called identifiers. <span>var x</span></p>
                    </li>
                    <li>
                        <p><a href="Vriable Assignment">Variable Assignment. </a>Assignment operators assign values to JavaScript variables - our cup can now have coffe poured in it, giving our variable a value to hold. The = assignment operator assigns
                            a value to a variable. <span>var x=10;</span></p>
                    </li>
                    <li>
                        <p><a href="Data Tipes">Data Tipes </a>Data Type. Data types are an important concept; to be able to operate on variables you need to know the date type. There are six data types that are JavaScript primitives: Boolean -<span>true</span>                            or <span>null</span> aka nothing; Number -<span>42</span> or
                            <sapan> 3.14159</sapan>;String <span>"Coding Dojo Rocks! </span>" Array -<span>[1, 'Coding',2,'Dojo']</span>; and Object <span>-{first_name:'Jane', last_name: 'Doe'} </span>
                        </p>
                    </li>
                    <li>
                        <p><a href="Conditional">Conditional </a>When you write code, you want to perform different actions for different decisions - hitting different code blocks bases on values or conditional statements: if a specified condition is true,
                            do this code in our code block; else if to specify a new condition to test,<span>if</span> the first condition is false;
                            <span>else if</span> we execute <span>else </span> block of code; </p>
                    </li>
                    <li>
                        <p><a href="Loops">Loops</a>There area many different kinds of loops in every programming language, but they all essentially do the same thing: they will repeat an action some number of times. Imagine you have to run a mile, well
                            you run around the track four times and then you stop. Thats a loop!.</p>
                    </li>
                    <li>
                        <p><a href="Function">Function</a> Funtions are an encaspulation of a code block. When we call our function this will run that code block. Think of it as a list of intructions. As an example imagine we are putting together a desk
                            from Ikea, we open up the instruction manual and get started, first we screw the legs to the table top; next we place the table the right way up. Done! We finished our instructions. Sadly there are a ton more tables to do so
                            lets call our function over and over and over again.</p>
                    </li>
                </ul>
            </p>
        </div>
        <div id="finish">
            <p>For more useful information check out this url: <a href="https://www.javascript.com/">JavaScript</p>
        </div>
    </div>
    <!-- end of wrapper -->
</body>

</html>